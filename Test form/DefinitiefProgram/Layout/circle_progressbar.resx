<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="circle.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ch5DAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="stretch.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="fader.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>476, 17</value>
  </metadata>
  <metadata name="ColorTransition.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>587, 17</value>
  </metadata>
</root>