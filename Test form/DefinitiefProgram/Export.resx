<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuCircleProgressbar1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6gNHzmN2AJcAAAAASUVORK5CYII=
</value>
  </data>
</root>